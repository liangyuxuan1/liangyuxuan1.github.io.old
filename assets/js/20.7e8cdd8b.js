(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{228:function(n,e,t){"use strict";t.r(e);var l=t(0),o=Object(l.a)({},(function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[t("h1",{attrs:{id:"config-the-development-environment-on-xubuntu"}},[n._v("Config the development environment on Xubuntu")]),n._v(" "),t("h2",{attrs:{id:"general"}},[n._v("General")]),n._v(" "),t("ol",[t("li",[t("p",[n._v("Change the default source to a fast one, such as mirrors.aliyun.com or mirrors.ustc.edu.cn. Refer to here: https://mirrors.ustc.edu.cn/help/ubuntu.html")])]),n._v(" "),t("li",[t("p",[n._v("Install gedit: "),t("code",[n._v("sudo apt-get install gedit")])])]),n._v(" "),t("li",[t("p",[n._v("Install chrome browser: Menu->Software, search chromium and install.")])])]),n._v(" "),t("h2",{attrs:{id:"install-cuda"}},[n._v("Install Cuda")]),n._v(" "),t("p",[n._v("First, update display driver: Settings->Additional Drivers, select a 'proprietary' version.")]),n._v(" "),t("ol",[t("li",[t("p",[n._v("Install cuda: https://docs.nvidia.com/cuda/cuda-installation-guide-linux/index.html")]),n._v(" "),t("p",[t("code",[n._v("sudo dpkg -i cuda-repo-ubuntu1804-10-2-local-10.2.89-440.33.01_1.0-1_amd64.deb")])]),n._v(" "),t("p",[t("code",[n._v("sudo apt-key add /var/cuda-repo-10-2-local-10.2.89-440.33.01/7fa2af80.pub")])]),n._v(" "),t("p",[t("code",[n._v("sudo apt-get update")])]),n._v(" "),t("p",[t("code",[n._v("sudo apt-get install cuda")])])]),n._v(" "),t("li",[t("p",[n._v("Install libcudnn: https://docs.nvidia.com/deeplearning/cudnn/install-guide/index.html")]),n._v(" "),t("p",[n._v("Unzip the cuDNN package. Then")]),n._v(" "),t("p",[t("code",[n._v("sudo cp cuda/include/cudnn*.h /usr/local/cuda/include")])]),n._v(" "),t("p",[t("code",[n._v("sudo cp -P cuda/lib64/libcudnn* /usr/local/cuda/lib64")])]),n._v(" "),t("p",[t("code",[n._v("sudo chmod a+r /usr/local/cuda/include/cudnn*.h /usr/local/cuda/lib64/libcudnn*")])])]),n._v(" "),t("li",[t("p",[n._v("Environment setup")]),n._v(" "),t("p",[t("code",[n._v("sudo gedit /etc/profile")])]),n._v(" "),t("p",[n._v("add the following lines:")]),n._v(" "),t("p",[t("code",[n._v("PATH=/usr/local/cuda-10.2/bin:$PATH")])]),n._v(" "),t("p",[t("code",[n._v("export PATH")])]),n._v(" "),t("p",[n._v("then run:")]),n._v(" "),t("p",[t("code",[n._v("source /etc/profile")])]),n._v(" "),t("p",[t("code",[n._v("sudo gedit /etc/ld.so.conf.d/cuda.conf")])]),n._v(" "),t("p",[n._v("add the following line:")]),n._v(" "),t("p",[t("code",[n._v("/usr/local/cuda-10.2/lib64")])]),n._v(" "),t("p",[n._v("then run")]),n._v(" "),t("p",[t("code",[n._v("sudo ldconfig")])])])]),n._v(" "),t("h2",{attrs:{id:"install-anaconda"}},[n._v("Install Anaconda")]),n._v(" "),t("pre",[t("code",[n._v("sh ./Anaconda3-2021.05-Linux-x86_64.sh\n")])]),n._v(" "),t("h2",{attrs:{id:"install-pytorch"}},[n._v("Install Pytorch")]),n._v(" "),t("p",[n._v("Open a terminal at the downloaded file directory")]),n._v(" "),t("pre",[t("code",[n._v("conda create -n pytorch181 pip python=3.8\n\nconda activate pytorch181\n\npip install torch-1.8.1+cu102-cp38-cp38-linux_x86_64.whl\n\npip install torchvision-0.9.1+cu102-cp38-cp38-linux_x86_64.whl\n\npip install  opencv_python-4.5.3.56-cp38-cp38-manylinux2014_x86_64.whl\n\npip install tensorboard\n\npip install jupyter\n")])]),n._v(" "),t("h2",{attrs:{id:"install-vscode"}},[n._v("Install VScode")]),n._v(" "),t("pre",[t("code",[n._v("sudo dpkg -i code_XXX.deb\n")])]),n._v(" "),t("h2",{attrs:{id:"config-github-and-gitee-same-as-in-windows"}},[n._v("Config github and gitee, same as in Windows")])])}),[],!1,null,null,null);e.default=o.exports}}]);